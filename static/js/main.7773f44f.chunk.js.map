{"version":3,"sources":["Components/Burger/BurgerIngredient/BurgerIngredient.module.css","Components/Navigation/SideDrawer/SideDrawer.module.css","Components/Burger/BuildControls/BuildControl/BuildControl.module.css","Components/UI/Input/Input.module.css","Components/Navigation/Toolbar/Toolbar.module.css","Containers/HomePage/Home.module.css","Components/Burger/Burger.module.css","Components/Burger/BuildControls/BuildControls.module.css","Components/UI/Button/Button.module.css","Components/UI/Spinner/Spinner.module.css","Components/Order/Order.module.css","Containers/Auth/Auth.module.css","Components/UI/Modal/Modal.module.css","Components/UI/Backdrop/Backdrop.module.css","assets/images/Burger-Logo.png","Components/Logo/Logo.module.css","Components/Navigation/NavigationItems/NavigationItems.module.css","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","Components/Layout/Layout.module.css","Containers/BurgerBuilder/BurgerBuilder.module.css","Components/Order/CheckoutSummary/CheckoutSummay.module.css","Containers/Checkout/ContactData/ContactData.module.css","Containers/Orders/Orders.module.css","Components/UI/Buttons/Button.module.css","hoc/Auxiliary.js","Components/Burger/BurgerIngredient/BurgerIngredient.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/UI/Backdrop/Backdrop.js","Components/UI/Modal/Modal.js","Components/UI/Button/Button.js","Components/OrderSummary/OrderSummary.js","axios-order.js","Components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","SecretKey.js","store/actions/auth.js","store/actions/actionTypes.js","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Components/Navigation/Toolbar/Toolbar.js","Components/Navigation/SideDrawer/SideDrawer.js","Components/Layout/Layout.js","Containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","Components/Order/CheckoutSummary/CheckoutSummary.js","Components/UI/Input/Input.js","shared/CheckValidation.js","Containers/Checkout/ContactData/ContactData.js","Containers/Checkout/Checkout.js","Components/Order/Order.js","Containers/Orders/Orders.js","Containers/Auth/Auth.js","Containers/Auth/Logout/Logout.js","Components/UI/Buttons/Button.js","Containers/HomePage/Home.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","BurgerIngredient","ingredient","types","className","classes","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","derivedIngredients","Object","keys","ingredients","map","eachIng","Array","x","index","key","reduce","arr","el","concat","length","cont","Burger","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","disable","More","added","controls","type","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","isAuth","backdrop","show","Backdrop","clicked","React","memo","modalClosed","Modal","style","transform","opacity","prevProps","nextprops","childern","button","Button","btnType","join","orderSummary","ingredientSummary","igKey","textTransform","marginBottom","purchaseCancel","purchaseContinue","instance","axios","create","baseURL","spinner","Load","Loader","withErrorHandler","WrappedComponent","useState","error","setError","reqInterceptors","interceptors","request","use","req","resInterceptors","response","res","errorObj","useEffect","eject","message","KEY","authSuccess","Token","userId","idToken","authLogOut","localStorage","removeItem","authLogOutTimer","expiresIn","dispatch","setTimeout","setAuthRedirectPath","path","logo","Logo","src","BurgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","connect","state","auth","token","showSideDrawer","setShowSideDrawer","Content","ings","burgerBuilder","ttlPrice","totalPrice","addIngredientHandler","ingType","removeIngredientHandler","initIngredientsHandler","get","then","data","catch","err","initPurchaseHandler","onSetAuthRedirectPath","actions","purchasing","setPurchasing","purchasingCancelHandler","disabledInfo","updtdIngredients","errMsg","role","aria-label","Spinner","igkey","currentsum","ele","history","push","OrderSummary","checkoutSummary","CheckoutSummary","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","checkValidity","rules","isValid","required","trim","isEmail","test","minLength","maxLength","loading","order","onOrderBurger","orderData","authtoken","post","id","orderId","purchaseBurgerSuccess","name","orderActions","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","orderForm","setOrderForm","formIsValid","setFormIsValid","formElementsArray","config","formDta","onSubmit","event","preventDefault","formData","formElementIdentifier","formElement","inputIdentifier","updatedorderForm","updatedFormElement","target","eachkey","inputChangedHandler","Fragment","Classes","ContactData","purchased","summary","purchaseRedirect","goBack","replace","match","url","component","ingredientName","amount","ingredientOutput","ig","display","fontWeight","margin","border","padding","OrderBg","Order","Number","parseFloat","useDispatch","fetchOrdersHandler","useCallback","getState","queryParams","fetchedorderData","orders","fetchOrdersSuccess","fetchOrdersFail","useSelector","ordersFetched","buildingBurger","authRedirectPath","onAuth","password","IsSignUp","authData","returnSecureToken","setItem","localId","expirationDate","Date","getTime","authFailed","onSetRedirectAuthPath","authForm","setAuthForm","setIsSignUp","formE","controlName","updatedControls","errorHanddler","color","authRedirect","Layot","Auth","logout","HomePg","home","sec","inner","withRouter","onTryAutoSignup","getItem","routes","BurgerBuilder","Checkout","Orders","Logout","Boolean","window","location","hostname","initialState","building","INGREDIENT_PRICE","bacon","salad","cheese","meat","reducer","action","newOrder","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.7773f44f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2GceD\",\"BreadTop\":\"BurgerIngredient_BreadTop__1efXf\",\"Seeds1\":\"BurgerIngredient_Seeds1__FOHZN\",\"Seeds2\":\"BurgerIngredient_Seeds2__HR8LQ\",\"Meat\":\"BurgerIngredient_Meat__2UuvB\",\"Cheese\":\"BurgerIngredient_Cheese__p0yAX\",\"Salad\":\"BurgerIngredient_Salad__16C7p\",\"Bacon\":\"BurgerIngredient_Bacon__SCl__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__38NE9\",\"Open\":\"SideDrawer_Open__25-jN\",\"Close\":\"SideDrawer_Close__3Pg3N\",\"Logo\":\"SideDrawer_Logo__Bq0-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2tya7\",\"Label\":\"BuildControl_Label__7FWmy\",\"Less\":\"BuildControl_Less__3HzYN\",\"More\":\"BuildControl_More__1SLzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2WEbV\",\"Label\":\"Input_Label__2oxb2\",\"InputElement\":\"Input_InputElement__1IwXx\",\"Invalid\":\"Input_Invalid__2AByj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__20T50\",\"Logo\":\"Toolbar_Logo__3JWkJ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1-B4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sec\":\"Home_sec__3QynE\",\"inner\":\"Home_inner__3z31K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"Burger_cont__Xsssf\",\"Burger\":\"Burger_Burger__16CRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1k3EE\",\"OrderButton\":\"BuildControls_OrderButton__3CcH7\",\"enable\":\"BuildControls_enable__2Cnrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3SZDy\",\"Success\":\"Button_Success__2h68R\",\"Danger\":\"Button_Danger__1nQiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Load\":\"Spinner_Load__165WF\",\"Loader\":\"Spinner_Loader__2jCkc\",\"load2\":\"Spinner_load2__3wVVI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__22Be-\",\"OrderBg\":\"Order_OrderBg__2jgeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__12P50\",\"Layot\":\"Auth_Layot__2y71o\",\"Input\":\"Auth_Input__3fc1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2qLYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3CHB7\"};","module.exports = __webpack_public_path__ + \"static/media/Burger-Logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2HHb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3G3iW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__y3-1O\",\"active\":\"NavigationItem_active__3tzw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3NAyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__7-EKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errMsg\":\"BurgerBuilder_errMsg__3YISW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummay_CheckoutSummary__26n4G\",\"Burger\":\"CheckoutSummay_Burger___r5rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3KmE2\",\"Input\":\"ContactData_Input__HLYwR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"Orders_orders__1ps5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2kWxg\"};","const aux = props => props.children;\r\n\r\nexport default aux;","import React from \"react\";\r\nimport classes from \"./BurgerIngredient.module.css\"; //.model for css module apprach\r\nimport PropTypes from \"prop-types\"; // installed // to use propType validation\r\n\r\n//---------------- FUNCTIONAL APPROACH---------------------------------------------------------------------\r\n\r\nconst BurgerIngredient = (props) => {\r\n  let ingredient = null;\r\n\r\n  switch (props.types) {\r\n    case \"bread-bottom\":\r\n      ingredient = <div className={classes.BreadBottom}> </div>;\r\n      break;\r\n    case \"bread-top\":\r\n      ingredient = (\r\n        <div className={classes.BreadTop}>\r\n          <div className={classes.Seeds1}> </div>\r\n          <div className={classes.Seeds2}> </div>\r\n        </div>\r\n      );\r\n      break;\r\n    case \"meat\":\r\n      ingredient = <div className={classes.Meat}> </div>;\r\n      break;\r\n    case \"cheese\":\r\n      ingredient = <div className={classes.Cheese}> </div>;\r\n      break;\r\n    case \"salad\":\r\n      ingredient = <div className={classes.Salad}> </div>;\r\n      break;\r\n    case \"bacon\":\r\n      ingredient = <div className={classes.Bacon}> </div>;\r\n      break;\r\n\r\n    default:\r\n      ingredient = null;\r\n  }\r\n  return ingredient;\r\n};\r\n\r\n//for validation of prop types being passed\r\n\r\nBurgerIngredient.propTypes = {\r\n  //accessing added(npm i prop-type) property(propType)\r\n  types: PropTypes.string, //of class(BurgerIngredient) to set validation fr propreties (types)\r\n};\r\n\r\nexport default BurgerIngredient;\r\n\r\n//---------------- CLASS BASED APPROACH---------------------------------------------------------------------\r\n\r\n// class BurgerIngredient extends Component {\r\n\r\n//     render() {\r\n\r\n//         let ingredient = null;\r\n\r\n//         switch (props.types) {\r\n\r\n//             case (\"bread-bottom\"):\r\n//                 ingredient = <div className={classes.BreadBottom}> </div>\r\n//                 break;\r\n//             case (\"bread-top\"):\r\n//                 ingredient =\r\n//                     <div className={classes.BreadTop}>\r\n//                         <div className={classes.Seeds1}> </div>\r\n//                         <div className={classes.Seeds2}> </div>\r\n//                     </div>\r\n//                 break;\r\n//             case (\"meat\"):\r\n//                 ingredient = <div className={classes.Meat}> </div>\r\n//                 break;\r\n//             case (\"cheese\"):\r\n//                 ingredient = <div className={classes.Cheese}> </div>\r\n//                 break;\r\n//             case (\"salad\"):\r\n//                 ingredient = <div className={classes.Salad}> </div>\r\n//                 break;\r\n//             case (\"bacon\"):\r\n//                 ingredient = <div className={classes.Bacon}> </div>\r\n//                 break;\r\n\r\n//             default: ingredient = null;\r\n//         }\r\n//         return (ingredient);\r\n//     }\r\n\r\n// }\r\n\r\n// //for validation of prop types being passed\r\n\r\n// BurgerIngredient.propTypes = {      //accessing added(npm i prop-type) property(propType)\r\n//     types: PropTypes.string //of class(BurgerIngredient) to set validation fr propreties (types)\r\n\r\n// };\r\n\r\n// export default BurgerIngredient;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst burger = (props) => {\r\n  let derivedIngredients = Object.keys(props.ingredients) //Converting ingredients objt to an array\r\n    .map((eachIng) => {\r\n      // performing map on each ingredient & getting\r\n\r\n      return [...Array(props.ingredients[eachIng])] // the value/qty of each ingredient into a an array with that many elements//\r\n        .map((x, index) => {\r\n          // & mapping each array with number of elements\r\n\r\n          return <BurgerIngredient key={eachIng + index} types={eachIng} />; // to get each separate BurgerIngredient\r\n        });\r\n    })\r\n    .reduce(\r\n      //takes 2 args, 1 callback function and other initial value of reduced value\r\n      (arr, el) => {\r\n        // in arg fn takes previous value and current values as input\r\n\r\n        return arr.concat(el);\r\n      },\r\n      []\r\n    ); //reduce used to flatten and concat all arrays into one array to check for empty ingdts.\r\n\r\n  if (derivedIngredients.length === 0) {\r\n    derivedIngredients = (\r\n      <p className={classes.cont}>Please start adding ingredients!</p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient types=\"bread-top\" />\r\n      {derivedIngredients}\r\n      <BurgerIngredient types=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.module.css\";\r\n\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.Label}>{props.label}</div>\r\n      <button\r\n        className={classes.Less}\r\n        onClick={props.removed}\r\n        disabled={props.disable}\r\n      >\r\n        LESS{/* ➖ */}\r\n      </button>\r\n      <button className={classes.More} onClick={props.added}>\r\n        MORE{/* ➕ */}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst buildControls = (props) => {\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        CURRENT PRICE : <strong> {props.price.toFixed(2)}$</strong>\r\n      </p>\r\n      {controls.map((ctrl) => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => props.ingredientAdded(ctrl.type)} //to pass type as an arg to BurgerBuilder when\r\n          removed={() => props.ingredientRemoved(ctrl.type)} //click is detected by BuildControl\r\n          disable={props.disabled[ctrl.type]}\r\n        />\r\n      ))}\r\n      <button\r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.ordered}\r\n      >\r\n        {props.isAuth ? \"ORDER NOW\" : \"PLEASE SIGNIN FIRST\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControls;\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst backdrop = (props) => {\r\n\r\n    return (\r\n        props.show ? <div className={classes.Backdrop}\r\n            onClick={props.clicked}\r\n        > </div> : null\r\n    );\r\n}\r\nexport default backdrop;","import React from \"react\";\r\n//import  {Component}  from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\n//---------------- FUNCTIONAL APPROACH---------------------------------------------------------------------\r\n\r\nconst Modal = (props) => {\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.show} clicked={props.modalClosed} />\r\n\r\n            <div className={classes.Modal}\r\n                style={{\r\n\r\n                    transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",//vh is viewport height which will slide it outside the screen\r\n                    opacity: props.show ? \"1\" : \"0\"\r\n                }}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default React.memo(Modal, (prevProps, nextprops) => {\r\n\r\n    return (prevProps.show === nextprops.show && prevProps.children === nextprops.childern);\r\n\r\n}); //for performance optimization, and specify when the modal should update\r\n\r\n\r\n//---------------- CLASS BASED APPROACH---------------------------------------------------------------------\r\n\r\n// class Modal extends Component {\r\n\r\n//     shouldComponentUpdate(nextProps, nextState) {\r\n\r\n//         return (nextProps.show !== props.show || nextProps.children !== props.childern); //returns true to re-render if props.show has changed \r\n//     }\r\n\r\n//     // componentDidUpdate() { // to check if cmponent is re-rendered\r\n//     //     console.log(\"[Modal] compnent updated\");\r\n//     // }\r\n\r\n//     render() {\r\n//         return (\r\n//             <Aux>\r\n//                 <Backdrop show={props.show} clicked={props.modalClosed} />\r\n\r\n//                 <div className={classes.Modal}\r\n//                     style={{\r\n\r\n//                         transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",//vh is viewport height which will slide it outside the screen\r\n//                         opacity: props.show ? \"1\" : \"0\"\r\n//                     }}\r\n//                 >\r\n//                     {props.children}\r\n//                 </div>\r\n//             </Aux>\r\n//         );\r\n//     }\r\n\r\n// }\r\n\r\n// export default Modal;","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst button = (props) => {\r\n\r\n    return (\r\n        <button\r\n            onClick={props.clicked}\r\n            disabled={props.disabled}\r\n            className={[classes.Button, classes[props.btnType]].join(\" \")}>\r\n            {props.children}\r\n        </button>);\r\n}\r\n\r\nexport default button;","import React from \"react\";\r\nimport Aux from \"../../../src/hoc/Auxiliary\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst orderSummary = (props) => {\r\n  const ingredientSummary = Object.keys(props.ingredients).map((igKey) => {\r\n    return (\r\n      <li key={igKey}>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\r\n        {props.ingredients[igKey]}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Aux>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientSummary}</ul>\r\n      <p>\r\n        <strong> Toatal Price: {props.price.toFixed(2)}$</strong>\r\n      </p>\r\n      <p style={{ marginBottom: 0 }}>Continue to checkout?</p>\r\n\r\n      <Button btnType=\"Danger\" clicked={props.purchaseCancel}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.purchaseContinue}>\r\n        CONTINUE\r\n      </Button>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default orderSummary;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://react-burgerbuilder-55.firebaseio.com/\",\r\n});\r\nexport default instance;\r\n","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\n\r\nconst spinner = () => {\r\n  return (\r\n    <div className={classes.Load}>\r\n      <div className={classes.Loader}>Loading...</div>\r\n    </div>\r\n  );\r\n};\r\nexport default spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport Aux from \"../Auxiliary\";\r\n\r\n//-------------------------------FUNCTIONAL APPROACH------------------------------------------------\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return (props) => {\r\n    const [error, setError] = useState(null);\r\n\r\n    const reqInterceptors = axios.interceptors.request.use((req) => {\r\n      setError(null);\r\n      return req;\r\n    });\r\n\r\n    const resInterceptors = axios.interceptors.response.use(\r\n      (res) => res,\r\n      (errorObj) => {\r\n        setError(errorObj);\r\n      }\r\n    );\r\n\r\n    useEffect(() => {\r\n      return () => {\r\n        // used to remove interceptors when we no longer require it in component\r\n        axios.interceptors.request.eject(reqInterceptors);\r\n        axios.interceptors.response.eject(resInterceptors);\r\n      };\r\n    }, [reqInterceptors, resInterceptors]);\r\n\r\n    const errorConfirmedHandler = () => {\r\n      setError(null);\r\n    };\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal show={error} modalClosed={errorConfirmedHandler}>\r\n          {error ? error.message : null}\r\n          {/*.message is a ppty returned with error obj */}\r\n        </Modal>\r\n        <WrappedComponent {...props} />\r\n      </Aux>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n\r\n//----------------CLASS BASED APPROACH---------------------------------------------------------------------\r\n\r\n// const withErrorHandler = (WrappedComponent, axios) => {\r\n\r\n//     return (\r\n//         class extends Component {\r\n//             state = {\r\n//                 error: null,\r\n//             }\r\n\r\n//             componentWillMount() { //used componentWillMount instd of componentDidMount\r\n//                 //to render it before the child components\r\n//                 reqInterceptors = axios.interceptors.request.use((req) => {\r\n//                     setState({ error: null });\r\n//                     return req;\r\n//                 });\r\n\r\n//                 resInterceptors = axios.interceptors.response.use((res) => res, (errorObj) => {\r\n//                     setState({ error: errorObj })\r\n//                 });\r\n//             }\r\n\r\n//             componentWillUnmount() {    // used to remove interceptors when we no longer require it in component\r\n//                 axios.interceptors.request.eject(reqInterceptors);\r\n//                 axios.interceptors.response.eject(resInterceptors);\r\n//             }\r\n//             errorConfirmedHandler = () => {\r\n\r\n//                 setState({ error: null });\r\n//             }\r\n\r\n//             render() {\r\n\r\n//                 return (\r\n//                     <Aux>\r\n//                         <Modal\r\n//                             show={error}\r\n//                             modalClosed={errorConfirmedHandler} >\r\n//                             {error ? error.message : null} {/*.message is a ppty returned with error obj */}\r\n//                         </Modal>\r\n//                         <WrappedComponent {...props} />\r\n//                     </Aux>\r\n\r\n//                 );\r\n//             }\r\n//         });\r\n// }\r\n\r\n// export default withErrorHandler;\r\n","const KEY = \"AIzaSyBsMLCpC4BhrfB0KBy99RScSXjiAtu0vmk\";\r\nexport default KEY;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport KEY from \"../../SecretKey\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (Token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: Token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFailed = (err) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAILED,\r\n    error: err,\r\n  };\r\n};\r\n\r\nexport const authLogOut = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const authLogOutTimer = (expiresIn) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogOut());\r\n    }, expiresIn * 1000); // ms to s\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, IsSignUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url = ` https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${KEY}`;\r\n    if (!IsSignUp) {\r\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${KEY}`;\r\n    }\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((res) => {\r\n        //console.log(res);\r\n        localStorage.setItem(\"token\", res.data.idToken);\r\n        localStorage.setItem(\"userId\", res.data.localId);\r\n\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + res.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        dispatch(authSuccess(res.data.idToken, res.data.localId));\r\n        dispatch(authLogOutTimer(res.data.expiresIn));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(authFailed(err.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path,\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (!token) {\r\n      // if token is null\r\n      dispatch(authLogOut());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\")); //wrapping into date to get a date objt from a date Sstring\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogOut());\r\n      } else {\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          authLogOutTimer(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAILURE = \"PURCHASE_BURGER_FAILURE\";\r\n\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILED = \"AUTH_FAILED\";\r\n\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";","import React from \"react\";\r\nimport BurgerLogo from \"../../assets/images/Burger-Logo.png\";\r\nimport classes from \"./Logo.module.css\";\r\n\r\nconst logo = (props) => {\r\n  return (\r\n    <div className={classes.Logo}>\r\n      <img src={BurgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n  );\r\n};\r\nexport default logo;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact\r\n            activeClassName={\"active\"}> {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst navigationItems = (props) => (\r\n  <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\">Home</NavigationItem>\r\n\r\n    <NavigationItem link=\"/build\">Burger Builder</NavigationItem>\r\n\r\n    {props.isAuthenticated ? (\r\n      <NavigationItem link=\"/Orders\"> My Orders</NavigationItem>\r\n    ) : null}\r\n\r\n    {props.isAuthenticated ? (\r\n      <NavigationItem link=\"/logout\"> LogOut</NavigationItem>\r\n    ) : (\r\n      <NavigationItem link=\"/auth\"> Authenticate</NavigationItem>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from \"react\";\r\nimport classes from \"./DrawerToggle.module.css\";\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default drawerToggle;","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked} />\r\n            <div className={classes.Logo}><Logo /></div>\r\n\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems isAuthenticated={props.isAuth} />\r\n            </nav>\r\n        </header>\r\n\r\n    );\r\n}\r\nexport default toolbar;","import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\n\r\nconst sideDrawer = (props) => {\r\n  let attachedClasses = [classes.SideDrawer, classes.Close];\r\n\r\n  if (props.open) {\r\n    attachedClasses = [classes.SideDrawer, classes.Open];\r\n  }\r\n\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClasses.join(\" \")} onClick={props.closed}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n\r\n        <nav>\r\n          <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\r\nimport classes from \"./Layout.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//-------------------------------FUNCTIONAL APPROACH------------------------------------------------\r\n\r\nconst Layout = (props) => {\r\n  const [showSideDrawer, setShowSideDrawer] = useState(false);\r\n\r\n  const sideDrawerClosedHandler = () => {\r\n    setShowSideDrawer(false);\r\n  };\r\n\r\n  const sideDrawerToggleHandler = () => {\r\n    setShowSideDrawer(!showSideDrawer);\r\n  };\r\n\r\n  return (\r\n    <Aux>\r\n      <Toolbar\r\n        isAuth={props.isAuthenticated}\r\n        drawerToggleClicked={sideDrawerToggleHandler}\r\n      />\r\n      <SideDrawer\r\n        isAuth={props.isAuthenticated}\r\n        open={showSideDrawer}\r\n        closed={sideDrawerClosedHandler}\r\n      />\r\n      <main className={classes.Content}>{props.children} </main>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../Components/Burger/Burger\";\r\nimport BuildControls from \"../../Components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../Components/OrderSummary/OrderSummary\";\r\nimport axios from \"../../axios-order\";\r\nimport Spinner from \"../../Components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Layout from \"../../Components/Layout/Layout\";\r\nimport classes from \"./BurgerBuilder.module.css\";\r\n//---------------- FUNCTIONAL APPROACH---------------------------------------------------------------------\r\n\r\nconst BurgerBuilder = (props) => {\r\n  const [purchasing, setPurchasing] = useState(false);\r\n\r\n  const { initIngredientsHandler } = props;\r\n\r\n  useEffect(() => {\r\n    initIngredientsHandler();\r\n  }, [initIngredientsHandler]);\r\n\r\n  const updatePurchaseState = (updtdIngredients) => {\r\n    const sum = Object.keys(updtdIngredients) // coverting obj to array with only keys in array [\"salad\", \"bacon\"..]\r\n      .map((igkey) => {\r\n        return updtdIngredients[igkey]; //return value of each key [salad(value),cheese(value),value,value]\r\n      })\r\n      .reduce((currentsum, ele) => {\r\n        return currentsum + ele; //sum of all values of ings ie X\r\n      }, 0);\r\n\r\n    return sum > 0;\r\n  };\r\n\r\n  const purchasingStateHandler = () => {\r\n    if (props.isAuth) {\r\n      setPurchasing(true);\r\n    } else {\r\n      props.onSetAuthRedirectPath(\"/checkout\");\r\n      props.history.push(\"/auth\");\r\n    }\r\n  };\r\n\r\n  const purchasingCancelHandler = () => {\r\n    setPurchasing(false);\r\n  };\r\n\r\n  const purchaseContinueHandler = () => {\r\n    props.initPurchaseHandler();\r\n    props.history.push(\"/checkout\");\r\n  };\r\n\r\n  const disabledInfo = {\r\n    ...props.ings,\r\n  };\r\n  // updating disabledInfo to { salad: true, meat: false... }\r\n  for (let key in disabledInfo) {\r\n    // goes through each ppty in an object\r\n    disabledInfo[key] = disabledInfo[key] <= 0; // to set a ppty to true or false based on value\r\n  }\r\n\r\n  let burger = props.error ? (\r\n    <div className={classes.errMsg}>\r\n      <p>\r\n        Sorry{\" \"}\r\n        <span role=\"img\" aria-label=\"\">\r\n          🙁\r\n        </span>\r\n        , could not load ingredients!\r\n      </p>\r\n    </div>\r\n  ) : (\r\n    <Spinner />\r\n  ); //if error during request to fetch data from remote server\r\n  let orderSummary = null;\r\n\r\n  if (props.ings) {\r\n    burger = (\r\n      <Aux>\r\n        <Burger ingredients={props.ings} />\r\n        <BuildControls\r\n          ingredientAdded={props.addIngredientHandler}\r\n          ingredientRemoved={props.removeIngredientHandler}\r\n          disabled={disabledInfo}\r\n          purchasable={updatePurchaseState(props.ings)}\r\n          ordered={purchasingStateHandler}\r\n          isAuth={props.isAuth}\r\n          price={props.ttlPrice}\r\n        />\r\n      </Aux>\r\n    );\r\n    orderSummary = (\r\n      <OrderSummary\r\n        ingredients={props.ings}\r\n        price={props.ttlPrice}\r\n        purchaseCancel={purchasingCancelHandler}\r\n        purchaseContinue={purchaseContinueHandler}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Aux>\r\n      <Layout>\r\n        <Modal show={purchasing} modalClosed={purchasingCancelHandler}>\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Layout>\r\n    </Aux>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    ttlPrice: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n    isAuth: state.auth.token !== null,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addIngredientHandler: (ingType) => dispatch(actions.addIngredient(ingType)),\r\n    removeIngredientHandler: (ingType) =>\r\n      dispatch(actions.removeIngredient(ingType)),\r\n    initIngredientsHandler: () => dispatch(actions.initIngredients()),\r\n    initPurchaseHandler: () => dispatch(actions.purchaseInit()),\r\n    onSetAuthRedirectPath: (path) =>\r\n      dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-order\";\r\n\r\nexport const addIngredient = (ingName) => {\r\n    return ({\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredient: ingName\r\n    });\r\n}\r\n\r\nexport const removeIngredient = (ingName) => {\r\n    return ({\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredient: ingName\r\n    });\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return ({\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    });\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return ({\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    });\r\n}\r\n\r\nexport const initIngredients = () => {\r\n\r\n    return ((dispatch) => {\r\n\r\n        axios.get(\"https://react-burgerbuilder-55.firebaseio.com/ingredients.json\")\r\n            .then((response) => {\r\n                dispatch(setIngredients(response.data));\r\n            }).catch((err) => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n\r\n    });\r\n}\r\n\r\n","import axios from \"../../axios-order\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return ({\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    });\r\n}\r\n\r\nexport const purchaseBurgerFailure = (error) => {\r\n    return ({\r\n        type: actionTypes.PURCHASE_BURGER_FAILURE,\r\n        error: error\r\n    });\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return ({\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    });\r\n}\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return ((dispatch) => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post((\"/orders.json?auth=\" + token), orderData)\r\n            .then((response) => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch((err) => {\r\n                dispatch(purchaseBurgerFailure(err));\r\n            });\r\n    });\r\n}\r\nexport const purchaseInit = () => {\r\n    return ({\r\n        type: actionTypes.PURCHASE_INIT\r\n    });\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return ({\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    });\r\n}\r\n\r\nexport const fetchOrdersSuccess = (fetchedorderData) => {\r\n    return ({\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: fetchedorderData\r\n    });\r\n}\r\nexport const fetchOrdersFail = (err) => {\r\n    return ({\r\n        type: actionTypes.PURCHASE_BURGER_FAILURE,\r\n        error: err\r\n    });\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return ((dispatch, getState) => {\r\n        // alt methd can get token from getState().auth directly also;\r\n\r\n        dispatch(fetchOrdersStart());\r\n        let queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n\r\n        axios.get('/orders.json' + queryParams)   // the data received from db is in nested object fromat \r\n            .then((res) => {    //{ randomKey1:{orderDetails1}, randomKey2:{orderDetails2}}\r\n\r\n                let fetchedorderData = []; //to store each order as an objt onto an array\r\n\r\n                for (let key in res.data) { // to loop through each key to retrive orderdetails and key\r\n                    fetchedorderData.push({ //spread and push object with key(recd from db) onto array.\r\n                        ...res.data[key], // spread value from randomkey\r\n                        id: key // add a new ppty with the random key as id\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedorderData));\r\n            })\r\n            .catch((err) => {\r\n                dispatch(fetchOrdersFail(err));\r\n            })\r\n    });\r\n}","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummay.module.css\";\r\n\r\nconst checkoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h2>We hope it tastes good!!</h2>\r\n      <div>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((\r\n            option // to output options dynamically & value required for 2-way binding\r\n          ) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}{\" \"}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid; //trim to remove white/empty spaces\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value) && isValid; // checks if value entered is among the valid letters mentioned in pattern\r\n  }\r\n\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n  return isValid;\r\n};\r\n\r\nexport default checkValidity;\r\n","import React, { useState } from \"react\";\r\n//import { Component } from \"react\";\r\nimport Button from \"../../../Components/UI/Button/Button\";\r\nimport Classes from \"./ContactData.module.css\";\r\nimport Spinner from \"../../../Components/UI/Spinner/Spinner\";\r\nimport axios from \"../../../axios-order\";\r\nimport Input from \"../../../Components/UI/Input/Input\";\r\nimport { connect } from \"react-redux\";\r\nimport * as orderActions from \"../../../store/actions/index\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport checkValidity from \"../../../shared/CheckValidation\";\r\nimport Jump from 'react-reveal/Jump';\r\n//---------------- FUNCTIONAL APPROACH---------------------------------------------------------------------\r\n\r\nconst ContactData = (props) => {\r\n  const [orderForm, setOrderForm] = useState({\r\n    name: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Your Name\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    street: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Your Street\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    zipCode: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"ZipCode\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n        maxLength: 5,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    country: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Country\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    email: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"email\",\r\n        placeholder: \"Your e-Mail\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    deliveryMethod: {\r\n      elementType: \"select\",\r\n      elementConfig: {\r\n        options: [\r\n          { value: \"Fastest\", displayValue: \"Fastest\" },\r\n          { value: \"Cheapest\", displayValue: \"Cheapest\" },\r\n        ],\r\n      },\r\n      validation: {},\r\n      valid: true,\r\n      value: \"Cheapest\",\r\n      touched: false,\r\n    },\r\n  });\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let formElementIdentifier in orderForm) {\r\n      formData[formElementIdentifier] = orderForm[formElementIdentifier].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: props.ings,\r\n      price: props.price,\r\n      orderData: formData,\r\n      userId: props.userId,\r\n    };\r\n\r\n    props.onOrderBurger(order, props.token);\r\n  };\r\n  const inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedorderForm = {\r\n      ...orderForm,\r\n    };\r\n    const updatedFormElement = {\r\n      ...updatedorderForm[inputIdentifier],\r\n    };\r\n\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.touched = true;\r\n    updatedorderForm[inputIdentifier] = updatedFormElement;\r\n\r\n    let formIsValid = true;\r\n\r\n    for (let eachkey in updatedorderForm) {\r\n      formIsValid = updatedorderForm[eachkey].valid && formIsValid;\r\n    }\r\n\r\n    setOrderForm(updatedorderForm);\r\n    setFormIsValid(formIsValid);\r\n  };\r\n\r\n  let formElementsArray = []; //to push all orderform data onto an array\r\n  for (let key in orderForm) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: orderForm[key],\r\n    });\r\n  }\r\n\r\n  let formDta = (\r\n    <form onSubmit={orderHandler}>\r\n      <h4>Enter your Data</h4>\r\n      {formElementsArray.map((formElement) => (\r\n        <Input\r\n          key={formElement.id}\r\n          elementType={formElement.config.elementType}\r\n          elementConfig={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          invalid={!formElement.config.valid}\r\n          shouldValidate={formElement.config.validation}\r\n          touched={formElement.config.touched}\r\n          changed={(event) => inputChangedHandler(event, formElement.id)}\r\n        />\r\n      ))}\r\n\r\n      <Button btnType=\"Success\" disabled={!formIsValid}>\r\n        ORDER\r\n      </Button>\r\n    </form>\r\n  );\r\n\r\n  if (props.loading) {\r\n    formDta = <Spinner />;\r\n  }\r\n\r\n  return (\r\n  <React.Fragment>\r\n        <div className={Classes.ContactData}>\r\n        {formDta}\r\n        </div>\r\n        </React.Fragment> );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (orderData, authtoken) =>\r\n      dispatch(orderActions.purchaseBurger(orderData, authtoken)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React from \"react\";\r\nimport CheckoutSummary from \"../../Components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Layout from \"../../Components/Layout/Layout\";\r\n\r\n//---------------- FUNCTIONAL APPROACH---------------------------------------------------------------------\r\n\r\nconst Checkout = (props) => {\r\n  const checkoutCancelledHandler = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const checkoutContinuedHandler = () => {\r\n    props.history.replace(props.match.url + \"/contact-data\");\r\n  };\r\n\r\n  let summary = <Redirect to=\"/build\" />;\r\n  if (props.ings) {\r\n    let purchaseRedirect = props.purchased ? <Redirect to=\"/build\" /> : null;\r\n\r\n    summary = (\r\n      <div>\r\n        {purchaseRedirect}\r\n        <CheckoutSummary\r\n          ingredients={props.ings}\r\n          checkoutCancelled={checkoutCancelledHandler}\r\n          checkoutContinued={checkoutContinuedHandler}\r\n          \r\n        />\r\n        <Route\r\n          path={props.match.url + \"/contact-data\"}\r\n          component={ContactData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return <Layout>{summary}</Layout>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from \"react\";\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst order = (props) => {\r\n  let ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  } //[ {name: salad, amount: 2}, {name: cheese, amount: 1}]\r\n\r\n  let ingredientOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          fontWeight: \"500\",\r\n          margin: \"3px 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\",\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name + \" \"}({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.OrderBg}>\r\n      <div className={classes.Order}>\r\n        <p> INGREDIENTS : {ingredientOutput}</p>\r\n        <p>\r\n          PRICE :\r\n          <strong>\r\n            {\" \" + Number.parseFloat(props.price).toFixed(2)}\r\n            {/*to covert the string to no.and limit to 2 dec places */}\r\n          </strong>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default order;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport Order from \"../../Components/Order/Order\";\r\nimport classes from \"./Orders.module.css\";\r\nimport axios from \"../../axios-order\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../Components/UI/Spinner/Spinner\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Layout from \"../../Components/Layout/Layout\";\r\n\r\n//---------------- FUNCTIONAL APPROACH---------------------------------------------------------------------\r\n\r\nconst Orders = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchOrdersHandler = useCallback(\r\n    (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n    [dispatch]\r\n  );\r\n\r\n  const orders = useSelector((state) => {\r\n    return state.order.orders;\r\n  });\r\n  const loading = useSelector((state) => {\r\n    return state.order.loading;\r\n  });\r\n  const token = useSelector((state) => {\r\n    return state.auth.token;\r\n  });\r\n  const userId = useSelector((state) => {\r\n    return state.auth.userId;\r\n  });\r\n  // const { fetchOrdersHandler, token, userId } = props;\r\n  useEffect(() => {\r\n    fetchOrdersHandler(token, userId);\r\n  }, [fetchOrdersHandler, token, userId]); //with [] works same as componentDidMount,ie will be executed only once after the component is mounted\r\n\r\n  let ordersFetched = <Spinner />;\r\n  if (!loading) {\r\n    ordersFetched = orders.map((order) => (\r\n      <Order\r\n        key={order.id}\r\n        ingredients={order.ingredients}\r\n        price={order.price} //price is stored in string format, shall be covrtd to number\r\n      /> //in Order component definition\r\n    ));\r\n  }\r\n  return (\r\n    <Layout>\r\n      <div className={classes.orders}>{ordersFetched}</div>\r\n    </Layout>\r\n  );\r\n};\r\nexport default withErrorHandler(Orders, axios);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Input from \"../../Components/UI/Input/Input\";\r\nimport Button from \"../../Components/UI/Button/Button\";\r\nimport classes from \"./Auth.module.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../Components/UI/Spinner/Spinner\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport checkValidity from \"../../shared/CheckValidation\";\r\nimport Layout from \"../../Components/Layout/Layout\";\r\n\r\n//---------------- FUNCTIONAL APPROACH---------------------------------------------------------------------\r\n\r\nconst Auth = (props) => {\r\n  const [authForm, setAuthForm] = useState({\r\n    email: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"email\",\r\n        placeholder: \"Your e-mail\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true, // to be added in check validation\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"password\",\r\n        placeholder: \"Password\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 6,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  });\r\n  const [IsSignUp, setIsSignUp] = useState(true);\r\n\r\n  const { buildingBurger, authRedirectPath, setAuthRedirectPath } = props;\r\n\r\n  useEffect(() => {\r\n    if (!buildingBurger && authRedirectPath !== \"/\") {\r\n      //to redirect to /(home) , when burger is not build and we are\r\n      setAuthRedirectPath(); // trying to access checkout from any other page\r\n    }\r\n  }, [buildingBurger, authRedirectPath, setAuthRedirectPath]);\r\n\r\n  const inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...authForm,\r\n      [controlName]: {\r\n        ...authForm[controlName],\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          authForm[controlName].validation\r\n        ),\r\n        touched: true,\r\n      },\r\n    };\r\n    setAuthForm(updatedControls);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onAuth(authForm.email.value, authForm.password.value, IsSignUp);\r\n  };\r\n\r\n  const signUpHandler = () => {\r\n    setIsSignUp(!IsSignUp);\r\n  };\r\n\r\n  let formElementsArray = []; //to push all controls data onto an array\r\n  for (let key in authForm) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: authForm[key],\r\n    });\r\n  }\r\n\r\n  let formE = formElementsArray.map((formElement) => {\r\n    return (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        invalid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        changed={(event) => inputChangedHandler(event, formElement.id)}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (props.loading) {\r\n    formE = <Spinner style={{ margin: \"20px auto\" }} />;\r\n  }\r\n\r\n  let errorHanddler = null;\r\n\r\n  if (props.error) {\r\n    errorHanddler = <p style={{ color: \"red\" }}> {props.error.message}</p>;\r\n  }\r\n\r\n  let authRedirect = null;\r\n  if (props.isAuth) {\r\n    authRedirect = <Redirect to={props.authRedirectPath} />; // to redirect to checkout after auth success\r\n  } // and when burger is alrdy build before.\r\n\r\n  return (\r\n    <Layout>\r\n      <div className={classes.Layot}>\r\n        <div className={classes.Auth}>\r\n          {authRedirect}\r\n          {errorHanddler}\r\n          <form onSubmit={submitHandler}>\r\n            {formE}\r\n            <Button btnType=\"Success\">SUBMIT</Button>\r\n          </form>\r\n\r\n          <Button clicked={signUpHandler} btnType=\"Danger\">\r\n            SWITCH TO {IsSignUp ? \"SIGNIN\" : \"SIGNUP\"}{\" \"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuth: state.auth.token !== null,\r\n    buildingBurger: state.burgerBuilder,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password, IsSignUp) =>\r\n      dispatch(actions.auth(email, password, IsSignUp)),\r\n    onSetRedirectAuthPath: () => dispatch(actions.setAuthRedirectPath(\"/\")),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport Layout from \"../../../Components/Layout/Layout\";\r\n\r\n//---------------- FUNCTIONAL APPROACH---------------------------------------------------------------------\r\n\r\nconst Logout = (props) => {\r\n  const { logout } = props;\r\n\r\n  useEffect(() => {\r\n    logout();\r\n  }, [logout]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Redirect to=\"/build\" />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(actions.authLogOut()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <div>\r\n      <button className={classes.Button} onClick={props.clicked}>\r\n        {props.children}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"../../Components/UI/Buttons/Button\";\r\nimport classes from \"./Home.module.css\";\r\n\r\nconst HomePg = (props) => {\r\n  const clickHandler = () => {\r\n    props.history.push(\"/build\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.home}>\r\n      <section className={classes.sec}>\r\n        <div className={classes.inner}>\r\n          <h1>\r\n            Build N Eat <span>🍽</span>\r\n          </h1>\r\n          <p>Choose your favourite ingredients to make a delicious Burger!</p>\r\n          <Button clicked={clickHandler}>Start Building</Button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default HomePg;\r\n","import React, { useEffect } from \"react\";\n//import Layout from \"./Components/Layout/Layout\";\nimport BurgerBuilder from \"./Containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./Containers/Checkout/Checkout\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport Orders from \"./Containers/Orders/Orders\";\nimport Auth from \"./Containers/Auth/Auth\";\nimport Logout from \"./Containers/Auth/Logout/Logout\";\nimport HomePg from \"./Containers/HomePage/Home\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\n\n//-------------------------------FUNCTIONAL APPROACH---------------------------------------------------------------\n\nconst App = (props) => {\n  const { onTryAutoSignup } = props;\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/\" exact component={HomePg} />\n      <Route path=\"/auth\" component={Auth} />\n      <Route path=\"/build\" exact component={BurgerBuilder} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if (props.isAuth) {\n    routes = (\n      <Switch>\n        <Route path=\"/checkout\" component={Checkout} />\n        <Route path=\"/Orders\" component={Orders} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/build\" exact component={BurgerBuilder} />\n        <Route path=\"/\" exact component={HomePg} />\n      </Switch>\n    );\n  }\n\n  return <div>{routes}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  // ingredients: { //can initialise it to null also\r\n  //     salad: 0,\r\n  //     bacon: 0,\r\n  //     cheese: 0,\r\n  //     meat: 0\r\n  // },\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false,\r\n  building: false,\r\n};\r\n\r\nconst INGREDIENT_PRICE = {\r\n  bacon: 0.7,\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredient]: state.ingredients[action.ingredient] + 1,\r\n        },\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICE[action.ingredient],\r\n        building: true,\r\n      };\r\n\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredient]: state.ingredients[action.ingredient] - 1,\r\n        },\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICE[action.ingredient],\r\n        building: true,\r\n      };\r\n\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          salad: action.ingredients.salad,\r\n          bacon: action.ingredients.bacon,\r\n          cheese: action.ingredients.cheese,\r\n          meat: action.ingredients.meat,\r\n        },\r\n        error: false,\r\n        totalPrice: 4,\r\n        building: false,\r\n      };\r\n\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case (actionTypes.PURCHASE_INIT):\r\n            return ({\r\n                ...state,\r\n                purchased: false\r\n            });\r\n\r\n        case (actionTypes.PURCHASE_BURGER_START):\r\n            return ({\r\n                ...state,\r\n                loading: true\r\n            });\r\n\r\n        case (actionTypes.PURCHASE_BURGER_SUCCESS):\r\n\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            }\r\n            return ({\r\n                ...state,\r\n                orders: state.orders.concat(newOrder),\r\n                loading: false,\r\n                purchased: true\r\n            });\r\n\r\n        case (actionTypes.PURCHASE_BURGER_FAILURE):\r\n            return ({\r\n                ...state,\r\n                loading: false\r\n            });\r\n\r\n        case (actionTypes.FETCH_ORDERS_START): {\r\n            return ({\r\n                ...state,\r\n                loading: true\r\n            });\r\n        }\r\n\r\n        case (actionTypes.FETCH_ORDERS_SUCCESS): {\r\n            return ({\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            });\r\n        }\r\n        case (actionTypes.FETCH_ORDERS_FAIL): {\r\n            return ({\r\n                ...state,\r\n                loading: false\r\n            });\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  userId: null,\r\n  token: null,\r\n  loading: false,\r\n  error: null,\r\n  authRedirectPath: \"/build\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userId: action.userId,\r\n        token: action.idToken,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case actionTypes.AUTH_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        userId: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return {\r\n        ...state,\r\n        authRedirectPath: action.path,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { applyMiddleware, createStore, combineReducers, compose } from \"redux\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\n\n// Restricting access to redux dev tools through process env variables\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\n//combining all reducers\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}